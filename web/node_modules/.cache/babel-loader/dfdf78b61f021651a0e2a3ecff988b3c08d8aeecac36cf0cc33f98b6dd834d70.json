{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Card,CardContent,Typography,Button,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,Chip,IconButton,Dialog,DialogTitle,DialogContent,DialogActions,TextField,FormControl,InputLabel,Select,MenuItem,Grid,CircularProgress,Alert,Pagination,Autocomplete}from'@mui/material';import{Add as AddIcon,Edit as EditIcon,Cancel as CancelIcon,Search as SearchIcon}from'@mui/icons-material';import{DateTimePicker}from'@mui/x-date-pickers/DateTimePicker';import{AdapterDateFns}from'@mui/x-date-pickers/AdapterDateFns';import{LocalizationProvider}from'@mui/x-date-pickers/LocalizationProvider';import{ptBR}from'date-fns/locale';import{useForm,Controller}from'react-hook-form';import{apiService}from'../../services/api';import{StatusConsulta,TipoConsulta}from'../../types';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ConsultasPage=()=>{const[consultas,setConsultas]=useState([]);const[pacientes,setPacientes]=useState([]);const[medicos,setMedicos]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[openDialog,setOpenDialog]=useState(false);const[editingConsulta,setEditingConsulta]=useState(null);const[searchTerm,setSearchTerm]=useState('');const[statusFilter,setStatusFilter]=useState('');const[medicoFilter,setMedicoFilter]=useState('');const[page,setPage]=useState(1);const[totalPages,setTotalPages]=useState(1);const{control,handleSubmit,reset,formState:{errors},setValue,watch}=useForm();const selectedMedico=watch('medico_id');const selectedDate=watch('data_hora');const loadConsultas=async()=>{try{setLoading(true);const response=await apiService.getConsultas((page-1)*10,10,medicoFilter?parseInt(medicoFilter):undefined,undefined,statusFilter||undefined);setConsultas(response.consultas);setTotalPages(Math.ceil(response.total/10));}catch(err){var _err$response,_err$response$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.detail)||'Erro ao carregar consultas');}finally{setLoading(false);}};const loadPacientes=async()=>{try{const response=await apiService.getPacientes(0,1000);setPacientes(response);}catch(err){console.error('Erro ao carregar pacientes:',err);}};const loadMedicos=async()=>{try{const response=await apiService.getMedicos();setMedicos(response);}catch(err){console.error('Erro ao carregar médicos:',err);}};useEffect(()=>{loadConsultas();},[page,statusFilter,medicoFilter]);useEffect(()=>{loadPacientes();loadMedicos();},[]);const handleOpenDialog=consulta=>{if(consulta){setEditingConsulta(consulta);reset({paciente_id:consulta.paciente_id,medico_id:consulta.medico_id,data_hora:new Date(consulta.data_hora),tipo:consulta.tipo,motivo:consulta.motivo||'',observacoes:consulta.observacoes||''});}else{setEditingConsulta(null);reset({paciente_id:0,medico_id:0,data_hora:new Date(),tipo:TipoConsulta.CONSULTA_NORMAL,motivo:'',observacoes:''});}setOpenDialog(true);};const handleCloseDialog=()=>{setOpenDialog(false);setEditingConsulta(null);reset();};const onSubmit=async data=>{try{if(editingConsulta){// Atualizar apenas campos que atendente pode alterar\nconst updateData={data_hora:data.data_hora.toISOString(),motivo:data.motivo,observacoes:data.observacoes};await apiService.updateConsulta(editingConsulta.id,updateData);}else{// Criar nova consulta\nconst createData={paciente_id:data.paciente_id,medico_id:data.medico_id,data_hora:data.data_hora.toISOString(),tipo:data.tipo,motivo:data.motivo,observacoes:data.observacoes};await apiService.createConsulta(createData);}handleCloseDialog();loadConsultas();}catch(err){var _err$response2,_err$response2$data;setError(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.detail)||'Erro ao salvar consulta');}};const handleCancelar=async id=>{if(window.confirm('Tem certeza que deseja cancelar esta consulta?')){try{await apiService.cancelarConsulta(id);loadConsultas();}catch(err){var _err$response3,_err$response3$data;setError(((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.detail)||'Erro ao cancelar consulta');}}};const getStatusColor=status=>{const colors={[StatusConsulta.AGENDADA]:'primary',[StatusConsulta.CONFIRMADA]:'secondary',[StatusConsulta.EM_ANDAMENTO]:'warning',[StatusConsulta.FINALIZADA]:'success',[StatusConsulta.CANCELADA]:'error'};return colors[status]||'default';};const formatDateTime=dateTime=>{return new Date(dateTime).toLocaleString('pt-BR');};if(loading&&consultas.length===0){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"400px\",children:/*#__PURE__*/_jsx(CircularProgress,{})});}return/*#__PURE__*/_jsx(LocalizationProvider,{dateAdapter:AdapterDateFns,adapterLocale:ptBR,children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Gerenciamento de Consultas\"}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:2},onClose:()=>setError(null),children:error}),/*#__PURE__*/_jsx(Card,{sx:{mb:3},children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Status\"}),/*#__PURE__*/_jsxs(Select,{value:statusFilter,onChange:e=>setStatusFilter(e.target.value),label:\"Status\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"Todos\"}),/*#__PURE__*/_jsx(MenuItem,{value:StatusConsulta.AGENDADA,children:\"Agendada\"}),/*#__PURE__*/_jsx(MenuItem,{value:StatusConsulta.CONFIRMADA,children:\"Confirmada\"}),/*#__PURE__*/_jsx(MenuItem,{value:StatusConsulta.EM_ANDAMENTO,children:\"Em Andamento\"}),/*#__PURE__*/_jsx(MenuItem,{value:StatusConsulta.FINALIZADA,children:\"Finalizada\"}),/*#__PURE__*/_jsx(MenuItem,{value:StatusConsulta.CANCELADA,children:\"Cancelada\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"M\\xE9dico\"}),/*#__PURE__*/_jsxs(Select,{value:medicoFilter,onChange:e=>setMedicoFilter(e.target.value),label:\"M\\xE9dico\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"Todos\"}),medicos.map(medico=>/*#__PURE__*/_jsxs(MenuItem,{value:medico.id.toString(),children:[medico.nome,\" - \",medico.especialidade]},medico.id))]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:2,children:/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:()=>{setPage(1);loadConsultas();},startIcon:/*#__PURE__*/_jsx(SearchIcon,{}),fullWidth:true,children:\"Buscar\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:()=>handleOpenDialog(),startIcon:/*#__PURE__*/_jsx(AddIcon,{}),fullWidth:true,children:\"Nova Consulta\"})})]})})}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Data/Hora\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Paciente\"}),/*#__PURE__*/_jsx(TableCell,{children:\"M\\xE9dico\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Tipo\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Status\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Motivo\"}),/*#__PURE__*/_jsx(TableCell,{children:\"A\\xE7\\xF5es\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:consultas.map(consulta=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:formatDateTime(consulta.data_hora)}),/*#__PURE__*/_jsx(TableCell,{children:consulta.paciente_nome}),/*#__PURE__*/_jsx(TableCell,{children:consulta.medico_nome}),/*#__PURE__*/_jsx(TableCell,{children:consulta.tipo}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:consulta.status,color:getStatusColor(consulta.status),size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:consulta.motivo||'-'}),/*#__PURE__*/_jsxs(TableCell,{children:[/*#__PURE__*/_jsx(IconButton,{onClick:()=>handleOpenDialog(consulta),disabled:consulta.status===StatusConsulta.FINALIZADA,children:/*#__PURE__*/_jsx(EditIcon,{})}),/*#__PURE__*/_jsx(IconButton,{onClick:()=>handleCancelar(consulta.id),disabled:consulta.status===StatusConsulta.FINALIZADA||consulta.status===StatusConsulta.CANCELADA,children:/*#__PURE__*/_jsx(CancelIcon,{})})]})]},consulta.id))})]})}),totalPages>1&&/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",mt:3,children:/*#__PURE__*/_jsx(Pagination,{count:totalPages,page:page,onChange:(_,newPage)=>setPage(newPage),color:\"primary\"})}),/*#__PURE__*/_jsx(Dialog,{open:openDialog,onClose:handleCloseDialog,maxWidth:\"md\",fullWidth:true,children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsx(DialogTitle,{children:editingConsulta?'Editar Consulta':'Nova Consulta'}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,sx:{mt:1},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Controller,{name:\"paciente_id\",control:control,rules:{required:'Paciente é obrigatório'},render:_ref=>{let{field:{onChange,value}}=_ref;return/*#__PURE__*/_jsx(Autocomplete,{options:pacientes,getOptionLabel:option=>`${option.nome} - ${option.cpf}`,value:pacientes.find(p=>p.id===value)||null,onChange:(_,newValue)=>onChange((newValue===null||newValue===void 0?void 0:newValue.id)||0),disabled:!!editingConsulta,renderInput:params=>{var _errors$paciente_id;return/*#__PURE__*/_jsx(TextField,{...params,label:\"Paciente\",error:!!errors.paciente_id,helperText:(_errors$paciente_id=errors.paciente_id)===null||_errors$paciente_id===void 0?void 0:_errors$paciente_id.message});}});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Controller,{name:\"medico_id\",control:control,rules:{required:'Médico é obrigatório'},render:_ref2=>{let{field:{onChange,value}}=_ref2;return/*#__PURE__*/_jsx(Autocomplete,{options:medicos,getOptionLabel:option=>`Dr. ${option.nome} - ${option.especialidade}`,value:medicos.find(m=>m.id===value)||null,onChange:(_,newValue)=>onChange((newValue===null||newValue===void 0?void 0:newValue.id)||0),disabled:!!editingConsulta,renderInput:params=>{var _errors$medico_id;return/*#__PURE__*/_jsx(TextField,{...params,label:\"M\\xE9dico\",error:!!errors.medico_id,helperText:(_errors$medico_id=errors.medico_id)===null||_errors$medico_id===void 0?void 0:_errors$medico_id.message});}});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Controller,{name:\"data_hora\",control:control,rules:{required:'Data e hora são obrigatórias'},render:_ref3=>{var _errors$data_hora;let{field}=_ref3;return/*#__PURE__*/_jsx(DateTimePicker,{...field,label:\"Data e Hora\",slotProps:{textField:{fullWidth:true,error:!!errors.data_hora,helperText:(_errors$data_hora=errors.data_hora)===null||_errors$data_hora===void 0?void 0:_errors$data_hora.message}}});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Controller,{name:\"tipo\",control:control,rules:{required:'Tipo é obrigatório'},render:_ref4=>{let{field}=_ref4;return/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,error:!!errors.tipo,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Tipo\"}),/*#__PURE__*/_jsxs(Select,{...field,label:\"Tipo\",disabled:!!editingConsulta,children:[/*#__PURE__*/_jsx(MenuItem,{value:TipoConsulta.CONSULTA_NORMAL,children:\"Consulta Normal\"}),/*#__PURE__*/_jsx(MenuItem,{value:TipoConsulta.RETORNO,children:\"Retorno\"}),/*#__PURE__*/_jsx(MenuItem,{value:TipoConsulta.EMERGENCIA,children:\"Emerg\\xEAncia\"}),/*#__PURE__*/_jsx(MenuItem,{value:TipoConsulta.EXAME,children:\"Exame\"})]})]});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Controller,{name:\"motivo\",control:control,rules:{required:'Motivo é obrigatório'},render:_ref5=>{var _errors$motivo;let{field}=_ref5;return/*#__PURE__*/_jsx(TextField,{...field,fullWidth:true,label:\"Motivo da Consulta\",multiline:true,rows:2,error:!!errors.motivo,helperText:(_errors$motivo=errors.motivo)===null||_errors$motivo===void 0?void 0:_errors$motivo.message});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Controller,{name:\"observacoes\",control:control,render:_ref6=>{let{field}=_ref6;return/*#__PURE__*/_jsx(TextField,{...field,fullWidth:true,label:\"Observa\\xE7\\xF5es\",multiline:true,rows:2});}})})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseDialog,children:\"Cancelar\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",children:editingConsulta?'Salvar':'Agendar'})]})]})})]})});};export default ConsultasPage;","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Chip","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","Grid","CircularProgress","Alert","Pagination","Autocomplete","Add","AddIcon","Edit","EditIcon","Cancel","CancelIcon","Search","SearchIcon","DateTimePicker","AdapterDateFns","LocalizationProvider","ptBR","useForm","Controller","apiService","StatusConsulta","TipoConsulta","jsx","_jsx","jsxs","_jsxs","ConsultasPage","consultas","setConsultas","pacientes","setPacientes","medicos","setMedicos","loading","setLoading","error","setError","openDialog","setOpenDialog","editingConsulta","setEditingConsulta","searchTerm","setSearchTerm","statusFilter","setStatusFilter","medicoFilter","setMedicoFilter","page","setPage","totalPages","setTotalPages","control","handleSubmit","reset","formState","errors","setValue","watch","selectedMedico","selectedDate","loadConsultas","response","getConsultas","parseInt","undefined","Math","ceil","total","err","_err$response","_err$response$data","data","detail","loadPacientes","getPacientes","console","loadMedicos","getMedicos","handleOpenDialog","consulta","paciente_id","medico_id","data_hora","Date","tipo","motivo","observacoes","CONSULTA_NORMAL","handleCloseDialog","onSubmit","updateData","toISOString","updateConsulta","id","createData","createConsulta","_err$response2","_err$response2$data","handleCancelar","window","confirm","cancelarConsulta","_err$response3","_err$response3$data","getStatusColor","status","colors","AGENDADA","CONFIRMADA","EM_ANDAMENTO","FINALIZADA","CANCELADA","formatDateTime","dateTime","toLocaleString","length","display","justifyContent","alignItems","minHeight","children","dateAdapter","adapterLocale","variant","gutterBottom","severity","sx","mb","onClose","container","spacing","item","xs","md","fullWidth","value","onChange","e","target","label","map","medico","toString","nome","especialidade","onClick","startIcon","component","paciente_nome","medico_nome","color","size","disabled","mt","count","_","newPage","open","maxWidth","name","rules","required","render","_ref","field","options","getOptionLabel","option","cpf","find","p","newValue","renderInput","params","_errors$paciente_id","helperText","message","_ref2","m","_errors$medico_id","_ref3","_errors$data_hora","slotProps","textField","_ref4","RETORNO","EMERGENCIA","EXAME","_ref5","_errors$motivo","multiline","rows","_ref6","type"],"sources":["/home/maria/Documentos/faculdade/ttpe/ia/clinicaMedica_TTPE/web/src/pages/atendente/ConsultasPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Chip,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  CircularProgress,\n  Alert,\n  Pagination,\n  Autocomplete\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Cancel as CancelIcon,\n  Search as SearchIcon\n} from '@mui/icons-material';\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { ptBR } from 'date-fns/locale';\nimport { useForm, Controller } from 'react-hook-form';\nimport { apiService } from '../../services/api';\nimport { \n  ConsultaResponse, \n  ConsultaCreate, \n  ConsultaUpdate, \n  StatusConsulta, \n  TipoConsulta,\n  PacienteResponse,\n  FuncionarioResponse\n} from '../../types';\n\ninterface ConsultaFormData {\n  paciente_id: number;\n  medico_id: number;\n  data_hora: Date;\n  tipo: TipoConsulta;\n  motivo: string;\n  observacoes?: string;\n}\n\nconst ConsultasPage: React.FC = () => {\n  const [consultas, setConsultas] = useState<ConsultaResponse[]>([]);\n  const [pacientes, setPacientes] = useState<PacienteResponse[]>([]);\n  const [medicos, setMedicos] = useState<FuncionarioResponse[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [editingConsulta, setEditingConsulta] = useState<ConsultaResponse | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  const [medicoFilter, setMedicoFilter] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const { control, handleSubmit, reset, formState: { errors }, setValue, watch } = useForm<ConsultaFormData>();\n\n  const selectedMedico = watch('medico_id');\n  const selectedDate = watch('data_hora');\n\n  const loadConsultas = async () => {\n    try {\n      setLoading(true);\n      const response = await apiService.getConsultas(\n        (page - 1) * 10,\n        10,\n        medicoFilter ? parseInt(medicoFilter) : undefined,\n        undefined,\n        statusFilter as StatusConsulta || undefined\n      );\n      setConsultas(response.consultas);\n      setTotalPages(Math.ceil(response.total / 10));\n    } catch (err: any) {\n      setError(err.response?.data?.detail || 'Erro ao carregar consultas');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadPacientes = async () => {\n    try {\n      const response = await apiService.getPacientes(0, 1000);\n      setPacientes(response);\n    } catch (err: any) {\n      console.error('Erro ao carregar pacientes:', err);\n    }\n  };\n\n  const loadMedicos = async () => {\n    try {\n      const response = await apiService.getMedicos();\n      setMedicos(response);\n    } catch (err: any) {\n      console.error('Erro ao carregar médicos:', err);\n    }\n  };\n\n  useEffect(() => {\n    loadConsultas();\n  }, [page, statusFilter, medicoFilter]);\n\n  useEffect(() => {\n    loadPacientes();\n    loadMedicos();\n  }, []);\n\n  const handleOpenDialog = (consulta?: ConsultaResponse) => {\n    if (consulta) {\n      setEditingConsulta(consulta);\n      reset({\n        paciente_id: consulta.paciente_id,\n        medico_id: consulta.medico_id,\n        data_hora: new Date(consulta.data_hora),\n        tipo: consulta.tipo,\n        motivo: consulta.motivo || '',\n        observacoes: consulta.observacoes || ''\n      });\n    } else {\n      setEditingConsulta(null);\n      reset({\n        paciente_id: 0,\n        medico_id: 0,\n        data_hora: new Date(),\n        tipo: TipoConsulta.CONSULTA_NORMAL,\n        motivo: '',\n        observacoes: ''\n      });\n    }\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setEditingConsulta(null);\n    reset();\n  };\n\n  const onSubmit = async (data: ConsultaFormData) => {\n    try {\n      if (editingConsulta) {\n        // Atualizar apenas campos que atendente pode alterar\n        const updateData: ConsultaUpdate = {\n          data_hora: data.data_hora.toISOString(),\n          motivo: data.motivo,\n          observacoes: data.observacoes\n        };\n        await apiService.updateConsulta(editingConsulta.id, updateData);\n      } else {\n        // Criar nova consulta\n        const createData: ConsultaCreate = {\n          paciente_id: data.paciente_id,\n          medico_id: data.medico_id,\n          data_hora: data.data_hora.toISOString(),\n          tipo: data.tipo,\n          motivo: data.motivo,\n          observacoes: data.observacoes\n        };\n        await apiService.createConsulta(createData);\n      }\n      \n      handleCloseDialog();\n      loadConsultas();\n    } catch (err: any) {\n      setError(err.response?.data?.detail || 'Erro ao salvar consulta');\n    }\n  };\n\n  const handleCancelar = async (id: number) => {\n    if (window.confirm('Tem certeza que deseja cancelar esta consulta?')) {\n      try {\n        await apiService.cancelarConsulta(id);\n        loadConsultas();\n      } catch (err: any) {\n        setError(err.response?.data?.detail || 'Erro ao cancelar consulta');\n      }\n    }\n  };\n\n  const getStatusColor = (status: StatusConsulta) => {\n    const colors: { [key in StatusConsulta]: 'default' | 'primary' | 'secondary' | 'success' | 'warning' | 'error' } = {\n      [StatusConsulta.AGENDADA]: 'primary',\n      [StatusConsulta.CONFIRMADA]: 'secondary',\n      [StatusConsulta.EM_ANDAMENTO]: 'warning',\n      [StatusConsulta.FINALIZADA]: 'success',\n      [StatusConsulta.CANCELADA]: 'error'\n    };\n    return colors[status] || 'default';\n  };\n\n  const formatDateTime = (dateTime: string) => {\n    return new Date(dateTime).toLocaleString('pt-BR');\n  };\n\n  if (loading && consultas.length === 0) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns} adapterLocale={ptBR}>\n      <Box>\n        <Typography variant=\"h4\" gutterBottom>\n          Gerenciamento de Consultas\n        </Typography>\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setError(null)}>\n            {error}\n          </Alert>\n        )}\n\n        <Card sx={{ mb: 3 }}>\n          <CardContent>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs={12} md={3}>\n                <FormControl fullWidth>\n                  <InputLabel>Status</InputLabel>\n                  <Select\n                    value={statusFilter}\n                    onChange={(e) => setStatusFilter(e.target.value)}\n                    label=\"Status\"\n                  >\n                    <MenuItem value=\"\">Todos</MenuItem>\n                    <MenuItem value={StatusConsulta.AGENDADA}>Agendada</MenuItem>\n                    <MenuItem value={StatusConsulta.CONFIRMADA}>Confirmada</MenuItem>\n                    <MenuItem value={StatusConsulta.EM_ANDAMENTO}>Em Andamento</MenuItem>\n                    <MenuItem value={StatusConsulta.FINALIZADA}>Finalizada</MenuItem>\n                    <MenuItem value={StatusConsulta.CANCELADA}>Cancelada</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <FormControl fullWidth>\n                  <InputLabel>Médico</InputLabel>\n                  <Select\n                    value={medicoFilter}\n                    onChange={(e) => setMedicoFilter(e.target.value)}\n                    label=\"Médico\"\n                  >\n                    <MenuItem value=\"\">Todos</MenuItem>\n                    {medicos.map((medico) => (\n                      <MenuItem key={medico.id} value={medico.id.toString()}>\n                        {medico.nome} - {medico.especialidade}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} md={2}>\n                <Button\n                  variant=\"outlined\"\n                  onClick={() => {setPage(1); loadConsultas();}}\n                  startIcon={<SearchIcon />}\n                  fullWidth\n                >\n                  Buscar\n                </Button>\n              </Grid>\n              <Grid item xs={12} md={3}>\n                <Button\n                  variant=\"contained\"\n                  onClick={() => handleOpenDialog()}\n                  startIcon={<AddIcon />}\n                  fullWidth\n                >\n                  Nova Consulta\n                </Button>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Data/Hora</TableCell>\n                <TableCell>Paciente</TableCell>\n                <TableCell>Médico</TableCell>\n                <TableCell>Tipo</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Motivo</TableCell>\n                <TableCell>Ações</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {consultas.map((consulta) => (\n                <TableRow key={consulta.id}>\n                  <TableCell>{formatDateTime(consulta.data_hora)}</TableCell>\n                  <TableCell>{consulta.paciente_nome}</TableCell>\n                  <TableCell>{consulta.medico_nome}</TableCell>\n                  <TableCell>{consulta.tipo}</TableCell>\n                  <TableCell>\n                    <Chip \n                      label={consulta.status} \n                      color={getStatusColor(consulta.status)}\n                      size=\"small\"\n                    />\n                  </TableCell>\n                  <TableCell>{consulta.motivo || '-'}</TableCell>\n                  <TableCell>\n                    <IconButton \n                      onClick={() => handleOpenDialog(consulta)}\n                      disabled={consulta.status === StatusConsulta.FINALIZADA}\n                    >\n                      <EditIcon />\n                    </IconButton>\n                    <IconButton \n                      onClick={() => handleCancelar(consulta.id)}\n                      disabled={consulta.status === StatusConsulta.FINALIZADA || consulta.status === StatusConsulta.CANCELADA}\n                    >\n                      <CancelIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        {totalPages > 1 && (\n          <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n            <Pagination\n              count={totalPages}\n              page={page}\n              onChange={(_, newPage) => setPage(newPage)}\n              color=\"primary\"\n            />\n          </Box>\n        )}\n\n        {/* Dialog para criar/editar consulta */}\n        <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"md\" fullWidth>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <DialogTitle>\n              {editingConsulta ? 'Editar Consulta' : 'Nova Consulta'}\n            </DialogTitle>\n            <DialogContent>\n              <Grid container spacing={2} sx={{ mt: 1 }}>\n                <Grid item xs={12} md={6}>\n                  <Controller\n                    name=\"paciente_id\"\n                    control={control}\n                    rules={{ required: 'Paciente é obrigatório' }}\n                    render={({ field: { onChange, value } }) => (\n                      <Autocomplete\n                        options={pacientes}\n                        getOptionLabel={(option) => `${option.nome} - ${option.cpf}`}\n                        value={pacientes.find(p => p.id === value) || null}\n                        onChange={(_, newValue) => onChange(newValue?.id || 0)}\n                        disabled={!!editingConsulta}\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            label=\"Paciente\"\n                            error={!!errors.paciente_id}\n                            helperText={errors.paciente_id?.message}\n                          />\n                        )}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Controller\n                    name=\"medico_id\"\n                    control={control}\n                    rules={{ required: 'Médico é obrigatório' }}\n                    render={({ field: { onChange, value } }) => (\n                      <Autocomplete\n                        options={medicos}\n                        getOptionLabel={(option) => `Dr. ${option.nome} - ${option.especialidade}`}\n                        value={medicos.find(m => m.id === value) || null}\n                        onChange={(_, newValue) => onChange(newValue?.id || 0)}\n                        disabled={!!editingConsulta}\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            label=\"Médico\"\n                            error={!!errors.medico_id}\n                            helperText={errors.medico_id?.message}\n                          />\n                        )}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Controller\n                    name=\"data_hora\"\n                    control={control}\n                    rules={{ required: 'Data e hora são obrigatórias' }}\n                    render={({ field }) => (\n                      <DateTimePicker\n                        {...field}\n                        label=\"Data e Hora\"\n                        slotProps={{\n                          textField: {\n                            fullWidth: true,\n                            error: !!errors.data_hora,\n                            helperText: errors.data_hora?.message\n                          }\n                        }}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Controller\n                    name=\"tipo\"\n                    control={control}\n                    rules={{ required: 'Tipo é obrigatório' }}\n                    render={({ field }) => (\n                      <FormControl fullWidth error={!!errors.tipo}>\n                        <InputLabel>Tipo</InputLabel>\n                        <Select {...field} label=\"Tipo\" disabled={!!editingConsulta}>\n                          <MenuItem value={TipoConsulta.CONSULTA_NORMAL}>Consulta Normal</MenuItem>\n                          <MenuItem value={TipoConsulta.RETORNO}>Retorno</MenuItem>\n                          <MenuItem value={TipoConsulta.EMERGENCIA}>Emergência</MenuItem>\n                          <MenuItem value={TipoConsulta.EXAME}>Exame</MenuItem>\n                        </Select>\n                      </FormControl>\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Controller\n                    name=\"motivo\"\n                    control={control}\n                    rules={{ required: 'Motivo é obrigatório' }}\n                    render={({ field }) => (\n                      <TextField\n                        {...field}\n                        fullWidth\n                        label=\"Motivo da Consulta\"\n                        multiline\n                        rows={2}\n                        error={!!errors.motivo}\n                        helperText={errors.motivo?.message}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Controller\n                    name=\"observacoes\"\n                    control={control}\n                    render={({ field }) => (\n                      <TextField\n                        {...field}\n                        fullWidth\n                        label=\"Observações\"\n                        multiline\n                        rows={2}\n                      />\n                    )}\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseDialog}>Cancelar</Button>\n              <Button type=\"submit\" variant=\"contained\">\n                {editingConsulta ? 'Salvar' : 'Agendar'}\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n      </Box>\n    </LocalizationProvider>\n  );\n};\n\nexport default ConsultasPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}