{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Card,CardContent,Typography,Button,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,Chip,IconButton,Dialog,DialogTitle,DialogContent,DialogActions,TextField,FormControl,InputLabel,Select,MenuItem,Grid,CircularProgress,Alert,Pagination,Snackbar}from'@mui/material';import{Add as AddIcon,Edit as EditIcon,Delete as DeleteIcon,Search as SearchIcon,Person as PersonIcon}from'@mui/icons-material';import{useForm,Controller}from'react-hook-form';import{LocalizationProvider,DatePicker}from'@mui/x-date-pickers';import{AdapterDateFns}from'@mui/x-date-pickers/AdapterDateFns';import{format}from'date-fns';import{ptBR}from'date-fns/locale';import{apiService}from'../../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PacientesPage=()=>{const[pacientes,setPacientes]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[openDialog,setOpenDialog]=useState(false);const[editingPaciente,setEditingPaciente]=useState(null);const[searchTerm,setSearchTerm]=useState('');const[page,setPage]=useState(1);const[totalPages,setTotalPages]=useState(1);const[snackbar,setSnackbar]=useState({open:false,message:'',severity:'success'});const{control,handleSubmit,reset,formState:{errors}}=useForm();// Carregar pacientes da API\nconst loadPacientes=async()=>{try{setLoading(true);setError(null);const response=await apiService.getPacientes({skip:(page-1)*10,limit:10,search:searchTerm||undefined});setPacientes(response);setTotalPages(Math.ceil(response.length/10));// API ainda não retorna total\n}catch(err){console.error('Erro ao carregar pacientes:',err);setError(err.message||'Erro ao carregar pacientes');setSnackbar({open:true,message:'Erro ao carregar pacientes',severity:'error'});}finally{setLoading(false);}};useEffect(()=>{loadPacientes();},[page,searchTerm]);// Criar paciente\nconst handleCreate=async data=>{try{const createData={nome:data.nome,rg:data.rg,cpf:data.cpf,sexo:data.sexo,data_nascimento:format(data.data_nascimento,'yyyy-MM-dd'),telefone:data.telefone||undefined,email:data.email||undefined,cidade_estado:data.cidade_estado||undefined,endereco:data.endereco||undefined,patologia:data.patologia||undefined};await apiService.createPaciente(createData);setSnackbar({open:true,message:'Paciente criado com sucesso!',severity:'success'});setOpenDialog(false);reset();loadPacientes();}catch(err){console.error('Erro ao criar paciente:',err);setSnackbar({open:true,message:err.message||'Erro ao criar paciente',severity:'error'});}};// Atualizar paciente\nconst handleUpdate=async data=>{if(!editingPaciente)return;try{const updateData={nome:data.nome!==editingPaciente.nome?data.nome:undefined,telefone:data.telefone!==editingPaciente.telefone?data.telefone:undefined,email:data.email!==editingPaciente.email?data.email:undefined,cidade_estado:data.cidade_estado!==editingPaciente.cidade_estado?data.cidade_estado:undefined,endereco:data.endereco!==editingPaciente.endereco?data.endereco:undefined,patologia:data.patologia!==editingPaciente.patologia?data.patologia:undefined};await apiService.updatePaciente(editingPaciente.id,updateData);setSnackbar({open:true,message:'Paciente atualizado com sucesso!',severity:'success'});setOpenDialog(false);setEditingPaciente(null);reset();loadPacientes();}catch(err){console.error('Erro ao atualizar paciente:',err);setSnackbar({open:true,message:err.message||'Erro ao atualizar paciente',severity:'error'});}};// Deletar paciente\nconst handleDelete=async paciente=>{if(!window.confirm(`Tem certeza que deseja deletar o paciente ${paciente.nome}?`)){return;}try{await apiService.deletePaciente(paciente.id);setSnackbar({open:true,message:'Paciente deletado com sucesso!',severity:'success'});loadPacientes();}catch(err){console.error('Erro ao deletar paciente:',err);setSnackbar({open:true,message:err.message||'Erro ao deletar paciente',severity:'error'});}};const openCreateDialog=()=>{setEditingPaciente(null);reset({nome:'',rg:'',cpf:'',sexo:'M',data_nascimento:new Date(),telefone:'',email:'',cidade_estado:'',endereco:'',patologia:''});setOpenDialog(true);};const openEditDialog=paciente=>{setEditingPaciente(paciente);reset({nome:paciente.nome,rg:paciente.rg,cpf:paciente.cpf,sexo:paciente.sexo,data_nascimento:new Date(paciente.data_nascimento),telefone:paciente.telefone||'',email:paciente.email||'',cidade_estado:paciente.cidade_estado||'',endereco:paciente.endereco||'',patologia:paciente.patologia||''});setOpenDialog(true);};const getSexoChipColor=sexo=>{return sexo==='M'?'primary':'secondary';};const onSubmit=editingPaciente?handleUpdate:handleCreate;if(loading&&pacientes.length===0){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"400px\",children:/*#__PURE__*/_jsx(CircularProgress,{})});}return/*#__PURE__*/_jsx(LocalizationProvider,{dateAdapter:AdapterDateFns,adapterLocale:ptBR,children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",gutterBottom:true,children:[/*#__PURE__*/_jsx(PersonIcon,{sx:{mr:1,verticalAlign:'middle'}}),\"Gerenciamento de Pacientes\"]}),/*#__PURE__*/_jsx(Card,{sx:{mb:3},children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Buscar pacientes (nome ou CPF)\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),InputProps:{startAdornment:/*#__PURE__*/_jsx(SearchIcon,{sx:{color:'action.active',mr:1}})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:openCreateDialog,fullWidth:true,children:\"Novo Paciente\"})})]})})}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:2},children:error}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Nome\"}),/*#__PURE__*/_jsx(TableCell,{children:\"CPF\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Idade\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Sexo\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Telefone\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Email\"}),/*#__PURE__*/_jsx(TableCell,{children:\"A\\xE7\\xF5es\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:pacientes.map(paciente=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsxs(TableCell,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body1\",fontWeight:\"medium\",children:paciente.nome}),paciente.patologia&&/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"text.secondary\",display:\"block\",children:[\"Patologia: \",paciente.patologia]})]}),/*#__PURE__*/_jsx(TableCell,{children:paciente.cpf}),/*#__PURE__*/_jsxs(TableCell,{children:[paciente.idade,\" anos\"]}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:paciente.sexo==='M'?'Masculino':'Feminino',color:getSexoChipColor(paciente.sexo),size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:paciente.telefone||'-'}),/*#__PURE__*/_jsx(TableCell,{children:paciente.email||'-'}),/*#__PURE__*/_jsxs(TableCell,{children:[/*#__PURE__*/_jsx(IconButton,{onClick:()=>openEditDialog(paciente),color:\"primary\",size:\"small\",children:/*#__PURE__*/_jsx(EditIcon,{})}),/*#__PURE__*/_jsx(IconButton,{onClick:()=>handleDelete(paciente),color:\"error\",size:\"small\",children:/*#__PURE__*/_jsx(DeleteIcon,{})})]})]},paciente.id))})]})}),totalPages>1&&/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",mt:3,children:/*#__PURE__*/_jsx(Pagination,{count:totalPages,page:page,onChange:(_,newPage)=>setPage(newPage),color:\"primary\"})}),/*#__PURE__*/_jsxs(Dialog,{open:openDialog,onClose:()=>setOpenDialog(false),maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:editingPaciente?'Editar Paciente':'Novo Paciente'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(Controller,{name:\"nome\",control:control,rules:{required:'Nome é obrigatório'},render:_ref=>{var _errors$nome;let{field}=_ref;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Nome completo\",fullWidth:true,error:!!errors.nome,helperText:(_errors$nome=errors.nome)===null||_errors$nome===void 0?void 0:_errors$nome.message});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(Controller,{name:\"rg\",control:control,rules:{required:'RG é obrigatório'},render:_ref2=>{var _errors$rg;let{field}=_ref2;return/*#__PURE__*/_jsx(TextField,{...field,label:\"RG\",fullWidth:true,disabled:!!editingPaciente,error:!!errors.rg,helperText:(_errors$rg=errors.rg)===null||_errors$rg===void 0?void 0:_errors$rg.message});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(Controller,{name:\"cpf\",control:control,rules:{required:'CPF é obrigatório',pattern:{value:/^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$/,message:'CPF deve estar no formato 000.000.000-00'}},render:_ref3=>{var _errors$cpf;let{field}=_ref3;return/*#__PURE__*/_jsx(TextField,{...field,label:\"CPF\",placeholder:\"000.000.000-00\",fullWidth:true,disabled:!!editingPaciente,error:!!errors.cpf,helperText:(_errors$cpf=errors.cpf)===null||_errors$cpf===void 0?void 0:_errors$cpf.message});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(Controller,{name:\"sexo\",control:control,rules:{required:'Sexo é obrigatório'},render:_ref4=>{let{field}=_ref4;return/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,error:!!errors.sexo,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Sexo\"}),/*#__PURE__*/_jsxs(Select,{...field,label:\"Sexo\",disabled:!!editingPaciente,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"M\",children:\"Masculino\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"F\",children:\"Feminino\"})]}),errors.sexo&&/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"error\",children:errors.sexo.message})]});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(Controller,{name:\"data_nascimento\",control:control,rules:{required:'Data de nascimento é obrigatória'},render:_ref5=>{var _errors$data_nascimen;let{field}=_ref5;return/*#__PURE__*/_jsx(DatePicker,{...field,label:\"Data de nascimento\",disabled:!!editingPaciente,slotProps:{textField:{fullWidth:true,error:!!errors.data_nascimento,helperText:(_errors$data_nascimen=errors.data_nascimento)===null||_errors$data_nascimen===void 0?void 0:_errors$data_nascimen.message}}});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(Controller,{name:\"telefone\",control:control,render:_ref6=>{let{field}=_ref6;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Telefone\",placeholder:\"(11) 99999-9999\",fullWidth:true});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(Controller,{name:\"email\",control:control,rules:{pattern:{value:/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,message:'Email inválido'}},render:_ref7=>{var _errors$email;let{field}=_ref7;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Email\",type:\"email\",fullWidth:true,error:!!errors.email,helperText:(_errors$email=errors.email)===null||_errors$email===void 0?void 0:_errors$email.message});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(Controller,{name:\"cidade_estado\",control:control,render:_ref8=>{let{field}=_ref8;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Cidade/Estado\",placeholder:\"S\\xE3o Paulo/SP\",fullWidth:true});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Controller,{name:\"endereco\",control:control,render:_ref9=>{let{field}=_ref9;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Endere\\xE7o completo\",fullWidth:true,multiline:true,rows:2});}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Controller,{name:\"patologia\",control:control,render:_ref0=>{let{field}=_ref0;return/*#__PURE__*/_jsx(TextField,{...field,label:\"Patologias/Observa\\xE7\\xF5es m\\xE9dicas\",fullWidth:true,multiline:true,rows:3,placeholder:\"Descreva patologias, alergias ou observa\\xE7\\xF5es importantes...\"});}})})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setOpenDialog(false),children:\"Cancelar\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",children:editingPaciente?'Atualizar':'Criar'})]})]})]}),/*#__PURE__*/_jsx(Snackbar,{open:snackbar.open,autoHideDuration:6000,onClose:()=>setSnackbar({...snackbar,open:false}),children:/*#__PURE__*/_jsx(Alert,{onClose:()=>setSnackbar({...snackbar,open:false}),severity:snackbar.severity,children:snackbar.message})})]})});};export default PacientesPage;","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Chip","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","Grid","CircularProgress","Alert","Pagination","Snackbar","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","Search","SearchIcon","Person","PersonIcon","useForm","Controller","LocalizationProvider","DatePicker","AdapterDateFns","format","ptBR","apiService","jsx","_jsx","jsxs","_jsxs","PacientesPage","pacientes","setPacientes","loading","setLoading","error","setError","openDialog","setOpenDialog","editingPaciente","setEditingPaciente","searchTerm","setSearchTerm","page","setPage","totalPages","setTotalPages","snackbar","setSnackbar","open","message","severity","control","handleSubmit","reset","formState","errors","loadPacientes","response","getPacientes","skip","limit","search","undefined","Math","ceil","length","err","console","handleCreate","data","createData","nome","rg","cpf","sexo","data_nascimento","telefone","email","cidade_estado","endereco","patologia","createPaciente","handleUpdate","updateData","updatePaciente","id","handleDelete","paciente","window","confirm","deletePaciente","openCreateDialog","Date","openEditDialog","getSexoChipColor","onSubmit","display","justifyContent","alignItems","minHeight","children","dateAdapter","adapterLocale","variant","gutterBottom","sx","mr","verticalAlign","mb","container","spacing","item","xs","sm","fullWidth","label","value","onChange","e","target","InputProps","startAdornment","color","startIcon","onClick","component","map","fontWeight","idade","size","mt","count","_","newPage","onClose","maxWidth","name","rules","required","render","_ref","_errors$nome","field","helperText","_ref2","_errors$rg","disabled","pattern","_ref3","_errors$cpf","placeholder","_ref4","_ref5","_errors$data_nascimen","slotProps","textField","_ref6","_ref7","_errors$email","type","_ref8","_ref9","multiline","rows","_ref0","autoHideDuration"],"sources":["/home/maria/Documentos/faculdade/ttpe/ia/clinicaMedica_TTPE/web/src/pages/atendente/PacientesPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Chip,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  CircularProgress,\n  Alert,\n  Pagination,\n  Snackbar\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  Search as SearchIcon,\n  Person as PersonIcon\n} from '@mui/icons-material';\nimport { useForm, Controller } from 'react-hook-form';\nimport { LocalizationProvider, DatePicker } from '@mui/x-date-pickers';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport { apiService } from '../../services/api';\nimport { PacienteResponse, PacienteCreate, PacienteUpdate } from '../../types';\n\ninterface PacienteFormData extends PacienteCreate {\n  data_nascimento: Date;\n}\n\nconst PacientesPage: React.FC = () => {\n  const [pacientes, setPacientes] = useState<PacienteResponse[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [editingPaciente, setEditingPaciente] = useState<PacienteResponse | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' as 'success' | 'error' });\n\n  const { control, handleSubmit, reset, formState: { errors } } = useForm<PacienteFormData>();\n\n  // Carregar pacientes da API\n  const loadPacientes = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await apiService.getPacientes({\n        skip: (page - 1) * 10,\n        limit: 10,\n        search: searchTerm || undefined\n      });\n      \n      setPacientes(response);\n      setTotalPages(Math.ceil(response.length / 10)); // API ainda não retorna total\n    } catch (err: any) {\n      console.error('Erro ao carregar pacientes:', err);\n      setError(err.message || 'Erro ao carregar pacientes');\n      setSnackbar({ \n        open: true, \n        message: 'Erro ao carregar pacientes', \n        severity: 'error' \n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPacientes();\n  }, [page, searchTerm]);\n\n  // Criar paciente\n  const handleCreate = async (data: PacienteFormData) => {\n    try {\n      const createData: PacienteCreate = {\n        nome: data.nome,\n        rg: data.rg,\n        cpf: data.cpf,\n        sexo: data.sexo,\n        data_nascimento: format(data.data_nascimento, 'yyyy-MM-dd'),\n        telefone: data.telefone || undefined,\n        email: data.email || undefined,\n        cidade_estado: data.cidade_estado || undefined,\n        endereco: data.endereco || undefined,\n        patologia: data.patologia || undefined\n      };\n\n      await apiService.createPaciente(createData);\n      \n      setSnackbar({ \n        open: true, \n        message: 'Paciente criado com sucesso!', \n        severity: 'success' \n      });\n      \n      setOpenDialog(false);\n      reset();\n      loadPacientes();\n    } catch (err: any) {\n      console.error('Erro ao criar paciente:', err);\n      setSnackbar({ \n        open: true, \n        message: err.message || 'Erro ao criar paciente', \n        severity: 'error' \n      });\n    }\n  };\n\n  // Atualizar paciente\n  const handleUpdate = async (data: PacienteFormData) => {\n    if (!editingPaciente) return;\n\n    try {\n      const updateData: PacienteUpdate = {\n        nome: data.nome !== editingPaciente.nome ? data.nome : undefined,\n        telefone: data.telefone !== editingPaciente.telefone ? data.telefone : undefined,\n        email: data.email !== editingPaciente.email ? data.email : undefined,\n        cidade_estado: data.cidade_estado !== editingPaciente.cidade_estado ? data.cidade_estado : undefined,\n        endereco: data.endereco !== editingPaciente.endereco ? data.endereco : undefined,\n        patologia: data.patologia !== editingPaciente.patologia ? data.patologia : undefined\n      };\n\n      await apiService.updatePaciente(editingPaciente.id, updateData);\n      \n      setSnackbar({ \n        open: true, \n        message: 'Paciente atualizado com sucesso!', \n        severity: 'success' \n      });\n      \n      setOpenDialog(false);\n      setEditingPaciente(null);\n      reset();\n      loadPacientes();\n    } catch (err: any) {\n      console.error('Erro ao atualizar paciente:', err);\n      setSnackbar({ \n        open: true, \n        message: err.message || 'Erro ao atualizar paciente', \n        severity: 'error' \n      });\n    }\n  };\n\n  // Deletar paciente\n  const handleDelete = async (paciente: PacienteResponse) => {\n    if (!window.confirm(`Tem certeza que deseja deletar o paciente ${paciente.nome}?`)) {\n      return;\n    }\n\n    try {\n      await apiService.deletePaciente(paciente.id);\n      \n      setSnackbar({ \n        open: true, \n        message: 'Paciente deletado com sucesso!', \n        severity: 'success' \n      });\n      \n      loadPacientes();\n    } catch (err: any) {\n      console.error('Erro ao deletar paciente:', err);\n      setSnackbar({ \n        open: true, \n        message: err.message || 'Erro ao deletar paciente', \n        severity: 'error' \n      });\n    }\n  };\n\n  const openCreateDialog = () => {\n    setEditingPaciente(null);\n    reset({\n      nome: '',\n      rg: '',\n      cpf: '',\n      sexo: 'M',\n      data_nascimento: new Date(),\n      telefone: '',\n      email: '',\n      cidade_estado: '',\n      endereco: '',\n      patologia: ''\n    });\n    setOpenDialog(true);\n  };\n\n  const openEditDialog = (paciente: PacienteResponse) => {\n    setEditingPaciente(paciente);\n    reset({\n      nome: paciente.nome,\n      rg: paciente.rg,\n      cpf: paciente.cpf,\n      sexo: paciente.sexo,\n      data_nascimento: new Date(paciente.data_nascimento),\n      telefone: paciente.telefone || '',\n      email: paciente.email || '',\n      cidade_estado: paciente.cidade_estado || '',\n      endereco: paciente.endereco || '',\n      patologia: paciente.patologia || ''\n    });\n    setOpenDialog(true);\n  };\n\n  const getSexoChipColor = (sexo: string) => {\n    return sexo === 'M' ? 'primary' : 'secondary';\n  };\n\n  const onSubmit = editingPaciente ? handleUpdate : handleCreate;\n\n  if (loading && pacientes.length === 0) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns} adapterLocale={ptBR}>\n      <Box>\n        <Typography variant=\"h4\" gutterBottom>\n          <PersonIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\n          Gerenciamento de Pacientes\n        </Typography>\n\n        <Card sx={{ mb: 3 }}>\n          <CardContent>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Buscar pacientes (nome ou CPF)\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  InputProps={{\n                    startAdornment: <SearchIcon sx={{ color: 'action.active', mr: 1 }} />\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <Button\n                  variant=\"contained\"\n                  startIcon={<AddIcon />}\n                  onClick={openCreateDialog}\n                  fullWidth\n                >\n                  Novo Paciente\n                </Button>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Nome</TableCell>\n                <TableCell>CPF</TableCell>\n                <TableCell>Idade</TableCell>\n                <TableCell>Sexo</TableCell>\n                <TableCell>Telefone</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell>Ações</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {pacientes.map((paciente) => (\n                <TableRow key={paciente.id}>\n                  <TableCell>\n                    <Typography variant=\"body1\" fontWeight=\"medium\">\n                      {paciente.nome}\n                    </Typography>\n                    {paciente.patologia && (\n                      <Typography variant=\"caption\" color=\"text.secondary\" display=\"block\">\n                        Patologia: {paciente.patologia}\n                      </Typography>\n                    )}\n                  </TableCell>\n                  <TableCell>{paciente.cpf}</TableCell>\n                  <TableCell>{paciente.idade} anos</TableCell>\n                  <TableCell>\n                    <Chip \n                      label={paciente.sexo === 'M' ? 'Masculino' : 'Feminino'} \n                      color={getSexoChipColor(paciente.sexo)}\n                      size=\"small\"\n                    />\n                  </TableCell>\n                  <TableCell>{paciente.telefone || '-'}</TableCell>\n                  <TableCell>{paciente.email || '-'}</TableCell>\n                  <TableCell>\n                    <IconButton \n                      onClick={() => openEditDialog(paciente)}\n                      color=\"primary\"\n                      size=\"small\"\n                    >\n                      <EditIcon />\n                    </IconButton>\n                    <IconButton \n                      onClick={() => handleDelete(paciente)}\n                      color=\"error\"\n                      size=\"small\"\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        {totalPages > 1 && (\n          <Box display=\"flex\" justifyContent=\"center\" mt={3}>\n            <Pagination\n              count={totalPages}\n              page={page}\n              onChange={(_, newPage) => setPage(newPage)}\n              color=\"primary\"\n            />\n          </Box>\n        )}\n\n        {/* Dialog para criar/editar paciente */}\n        <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"md\" fullWidth>\n          <DialogTitle>\n            {editingPaciente ? 'Editar Paciente' : 'Novo Paciente'}\n          </DialogTitle>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <DialogContent>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <Controller\n                    name=\"nome\"\n                    control={control}\n                    rules={{ required: 'Nome é obrigatório' }}\n                    render={({ field }) => (\n                      <TextField\n                        {...field}\n                        label=\"Nome completo\"\n                        fullWidth\n                        error={!!errors.nome}\n                        helperText={errors.nome?.message}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Controller\n                    name=\"rg\"\n                    control={control}\n                    rules={{ required: 'RG é obrigatório' }}\n                    render={({ field }) => (\n                      <TextField\n                        {...field}\n                        label=\"RG\"\n                        fullWidth\n                        disabled={!!editingPaciente}\n                        error={!!errors.rg}\n                        helperText={errors.rg?.message}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Controller\n                    name=\"cpf\"\n                    control={control}\n                    rules={{ \n                      required: 'CPF é obrigatório',\n                      pattern: {\n                        value: /^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$/,\n                        message: 'CPF deve estar no formato 000.000.000-00'\n                      }\n                    }}\n                    render={({ field }) => (\n                      <TextField\n                        {...field}\n                        label=\"CPF\"\n                        placeholder=\"000.000.000-00\"\n                        fullWidth\n                        disabled={!!editingPaciente}\n                        error={!!errors.cpf}\n                        helperText={errors.cpf?.message}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Controller\n                    name=\"sexo\"\n                    control={control}\n                    rules={{ required: 'Sexo é obrigatório' }}\n                    render={({ field }) => (\n                      <FormControl fullWidth error={!!errors.sexo}>\n                        <InputLabel>Sexo</InputLabel>\n                        <Select {...field} label=\"Sexo\" disabled={!!editingPaciente}>\n                          <MenuItem value=\"M\">Masculino</MenuItem>\n                          <MenuItem value=\"F\">Feminino</MenuItem>\n                        </Select>\n                        {errors.sexo && (\n                          <Typography variant=\"caption\" color=\"error\">\n                            {errors.sexo.message}\n                          </Typography>\n                        )}\n                      </FormControl>\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Controller\n                    name=\"data_nascimento\"\n                    control={control}\n                    rules={{ required: 'Data de nascimento é obrigatória' }}\n                    render={({ field }) => (\n                      <DatePicker\n                        {...field}\n                        label=\"Data de nascimento\"\n                        disabled={!!editingPaciente}\n                        slotProps={{\n                          textField: {\n                            fullWidth: true,\n                            error: !!errors.data_nascimento,\n                            helperText: errors.data_nascimento?.message\n                          }\n                        }}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Controller\n                    name=\"telefone\"\n                    control={control}\n                    render={({ field }) => (\n                      <TextField\n                        {...field}\n                        label=\"Telefone\"\n                        placeholder=\"(11) 99999-9999\"\n                        fullWidth\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Controller\n                    name=\"email\"\n                    control={control}\n                    rules={{\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: 'Email inválido'\n                      }\n                    }}\n                    render={({ field }) => (\n                      <TextField\n                        {...field}\n                        label=\"Email\"\n                        type=\"email\"\n                        fullWidth\n                        error={!!errors.email}\n                        helperText={errors.email?.message}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Controller\n                    name=\"cidade_estado\"\n                    control={control}\n                    render={({ field }) => (\n                      <TextField\n                        {...field}\n                        label=\"Cidade/Estado\"\n                        placeholder=\"São Paulo/SP\"\n                        fullWidth\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Controller\n                    name=\"endereco\"\n                    control={control}\n                    render={({ field }) => (\n                      <TextField\n                        {...field}\n                        label=\"Endereço completo\"\n                        fullWidth\n                        multiline\n                        rows={2}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Controller\n                    name=\"patologia\"\n                    control={control}\n                    render={({ field }) => (\n                      <TextField\n                        {...field}\n                        label=\"Patologias/Observações médicas\"\n                        fullWidth\n                        multiline\n                        rows={3}\n                        placeholder=\"Descreva patologias, alergias ou observações importantes...\"\n                      />\n                    )}\n                  />\n                </Grid>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={() => setOpenDialog(false)}>\n                Cancelar\n              </Button>\n              <Button type=\"submit\" variant=\"contained\">\n                {editingPaciente ? 'Atualizar' : 'Criar'}\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n\n        {/* Snackbar para notificações */}\n        <Snackbar\n          open={snackbar.open}\n          autoHideDuration={6000}\n          onClose={() => setSnackbar({ ...snackbar, open: false })}\n        >\n          <Alert \n            onClose={() => setSnackbar({ ...snackbar, open: false })} \n            severity={snackbar.severity}\n          >\n            {snackbar.message}\n          </Alert>\n        </Snackbar>\n      </Box>\n    </LocalizationProvider>\n  );\n};\n\nexport default PacientesPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}