{"ast":null,"code":"var _jsxFileName = \"/home/maria/Documentos/faculdade/ttpe/ia/clinicaMedica_TTPE/web/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { apiService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authState, setAuthState] = useState({\n    isAuthenticated: false,\n    user: null,\n    token: null\n  });\n  const [loading, setLoading] = useState(true);\n\n  // Verificar se há token salvo ao inicializar\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('access_token');\n      const userInfo = localStorage.getItem('user_info');\n      if (token && userInfo) {\n        try {\n          // Verificar se o token ainda é válido\n          const currentUser = await apiService.getCurrentUser();\n          setAuthState({\n            isAuthenticated: true,\n            user: currentUser,\n            token\n          });\n        } catch (error) {\n          // Token inválido\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('user_info');\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      const tokenResponse = await apiService.login(credentials);\n      const userInfo = await apiService.getCurrentUser();\n\n      // Salvar no localStorage\n      localStorage.setItem('access_token', tokenResponse.access_token);\n      localStorage.setItem('user_info', JSON.stringify(userInfo));\n      setAuthState({\n        isAuthenticated: true,\n        user: userInfo,\n        token: tokenResponse.access_token\n      });\n      return true;\n    } catch (error) {\n      console.error('Erro no login:', error);\n      return false;\n    }\n  };\n  const logout = async () => {\n    try {\n      await apiService.logout();\n    } catch (error) {\n      console.error('Erro no logout:', error);\n    } finally {\n      // Limpar estado local\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('user_info');\n      setAuthState({\n        isAuthenticated: false,\n        user: null,\n        token: null\n      });\n    }\n  };\n  const value = {\n    ...authState,\n    login,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"lbNTjWMzPTBjaUkIJ3mxI19hzhY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiService","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","authState","setAuthState","isAuthenticated","user","token","loading","setLoading","checkAuth","localStorage","getItem","userInfo","currentUser","getCurrentUser","error","removeItem","login","credentials","tokenResponse","setItem","access_token","JSON","stringify","console","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/home/maria/Documentos/faculdade/ttpe/ia/clinicaMedica_TTPE/web/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { LoginRequest, UserInfo, AuthState } from '../types';\nimport { apiService } from '../services/api';\n\ninterface AuthContextType extends AuthState {\n  login: (credentials: LoginRequest) => Promise<boolean>;\n  logout: () => void;\n  loading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [authState, setAuthState] = useState<AuthState>({\n    isAuthenticated: false,\n    user: null,\n    token: null,\n  });\n  const [loading, setLoading] = useState(true);\n\n  // Verificar se há token salvo ao inicializar\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('access_token');\n      const userInfo = localStorage.getItem('user_info');\n\n      if (token && userInfo) {\n        try {\n          // Verificar se o token ainda é válido\n          const currentUser = await apiService.getCurrentUser();\n          setAuthState({\n            isAuthenticated: true,\n            user: currentUser,\n            token,\n          });\n        } catch (error) {\n          // Token inválido\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('user_info');\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (credentials: LoginRequest): Promise<boolean> => {\n    try {\n      const tokenResponse = await apiService.login(credentials);\n      const userInfo = await apiService.getCurrentUser();\n\n      // Salvar no localStorage\n      localStorage.setItem('access_token', tokenResponse.access_token);\n      localStorage.setItem('user_info', JSON.stringify(userInfo));\n\n      setAuthState({\n        isAuthenticated: true,\n        user: userInfo,\n        token: tokenResponse.access_token,\n      });\n\n      return true;\n    } catch (error) {\n      console.error('Erro no login:', error);\n      return false;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await apiService.logout();\n    } catch (error) {\n      console.error('Erro no logout:', error);\n    } finally {\n      // Limpar estado local\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('user_info');\n      setAuthState({\n        isAuthenticated: false,\n        user: null,\n        token: null,\n      });\n    }\n  };\n\n  const value: AuthContextType = {\n    ...authState,\n    login,\n    logout,\n    loading,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}